name: AutomacaoSalas-WEB Deploy (Corrigido)
on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: windows-latest
    
    env:
      work-directory: Codigo/ModuloDeSoftware/AutomacaoSalas/SalasWeb
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0'
    
    - name: Replace connection string
      uses: microsoft/variable-substitution@v1
      with:
        files: '${{env.work-directory}}/appsettings.json'
      env:
        ConnectionStrings.MySqlConnection: ${{secrets.CONNECTION_STRING}}
    
    - name: Restore dependencies
      run: |
        cd ${{env.work-directory}}
        dotnet restore
    
    - name: Build Application
      run: |
        cd ${{env.work-directory}}
        dotnet build --configuration Release --no-restore
    
    - name: Publish Application
      run: |
        cd ${{env.work-directory}}
        dotnet publish --configuration Release --no-build --output ./publishWEB
    
    # ETAPA 1: Criar e enviar App_Offline
    - name: Create App_Offline file
      run: |
        cd ${{env.work-directory}}/publishWEB
        echo "<html><body><h1>Site em manuten&ccedil;&atilde;o</h1><p>Voltaremos em instantes...</p></body></html>" > app_offline.htm
    
    - name: Deploy App_Offline first (STOP APPLICATION)
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: win8184.site4now.net
        username: itetech-001
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: '${{env.work-directory}}/publishWEB/'
        server-dir: /salasweb/
        include: |
          app_offline.htm
        exclude: |
          **/*
          !app_offline.htm
    
    # ETAPA 2: Aguardar aplicação parar
    - name: Wait for application to stop
      run: Start-Sleep -Seconds 15
    
    # ETAPA 3: Deploy dos arquivos da aplicação
    - name: Deploy application files
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: win8184.site4now.net
        username: itetech-001
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: '${{env.work-directory}}/publishWEB/'
        server-dir: /salasweb/
        exclude: |
          **/.git*
          **/.git*/**
          **/obj/**
          **/bin/**
          app_offline.htm
    
    # ETAPA 4: Remover App_Offline (RESTART APPLICATION)
    - name: Create empty folder for cleanup
      run: |
        mkdir -p ${{env.work-directory}}/cleanup
        echo "cleanup complete" > ${{env.work-directory}}/cleanup/cleanup.txt
    
    - name: Remove App_Offline file (RESTART APPLICATION)
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: win8184.site4now.net
        username: itetech-001
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: '${{env.work-directory}}/cleanup/'
        server-dir: /salasweb/
        include: |
          cleanup.txt
        # Deploy arquivo dummy para sincronizar
    
    # ETAPA 5: Limpeza manual do app_offline via PowerShell FTP
    - name: Manual FTP cleanup of app_offline.htm
      run: |
        $ftpServer = "win8184.site4now.net"
        $ftpUsername = "itetech-001"
        $ftpPassword = "${{ secrets.FTP_PASSWORD }}"
        
        try {
          # Criar request FTP para deletar app_offline.htm
          $ftpRequest = [System.Net.FtpWebRequest]::Create("ftp://$ftpServer/salasweb/app_offline.htm")
          $ftpRequest.Method = [System.Net.WebRequestMethods+Ftp]::DeleteFile
          $ftpRequest.Credentials = New-Object System.Net.NetworkCredential($ftpUsername, $ftpPassword)
          
          # Executar delete
          $response = $ftpRequest.GetResponse()
          Write-Host "✅ app_offline.htm removido com sucesso!"
          $response.Close()
        }
        catch {
          Write-Host "⚠️ Arquivo app_offline.htm pode já ter sido removido: $($_.Exception.Message)"
        }