name: EMERGENCY - Restore Site (Fix 404)
on:
  workflow_dispatch: # deploy manual de emerg√™ncia

jobs:
  emergency-restore:
    runs-on: windows-latest
    
    env:
      work-directory: Codigo/ModuloDeSoftware/AutomacaoSalas/SalasWeb
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0'
    
    - name: Replace connection string
      uses: microsoft/variable-substitution@v1
      with:
        files: '${{env.work-directory}}/appsettings.json'
      env:
        ConnectionStrings.MySqlConnection: ${{secrets.CONNECTION_STRING}}
    
    - name: Restore dependencies
      run: |
        cd ${{env.work-directory}}
        dotnet restore
    
    - name: Build Application
      run: |
        cd ${{env.work-directory}}
        dotnet build --configuration Release --no-restore
    
    - name: Publish Application
      run: |
        cd ${{env.work-directory}}
        dotnet publish --configuration Release --no-build --output ./publishWEB
    
    # Verificar se o web.config foi gerado corretamente
    - name: Check if web.config exists
      run: |
        cd ${{env.work-directory}}/publishWEB
        if (Test-Path "web.config") {
          Write-Host "‚úÖ web.config encontrado"
          Get-Content "web.config" | Select-Object -First 10
        } else {
          Write-Host "‚ùå web.config N√ÉO encontrado!"
        }
    
    # Deploy completo for√ßando todos os arquivos
    - name: Deploy complete application
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: win8184.site4now.net
        username: itetech-001
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: '${{env.work-directory}}/publishWEB/'
        server-dir: /salasweb/
        exclude: |
          **/.git*
          **/.git*/**
          **/obj/**
          **/bin/**
    
    # Teste de conectividade p√≥s-deploy
    - name: Test site after deploy
      run: |
        Write-Host "üîç Testando conectividade com o site..."
        try {
          $response = Invoke-WebRequest -Uri "http://itetech-001-site2.qtempurl.com" -TimeoutSec 30
          Write-Host "‚úÖ Site respondeu com status: $($response.StatusCode)"
        }
        catch {
          Write-Host "‚ö†Ô∏è Site ainda n√£o est√° respondendo: $($_.Exception.Message)"
          Write-Host "Isso √© normal - pode levar alguns minutos para o IIS reinicializar"
        }
