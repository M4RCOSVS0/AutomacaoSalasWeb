@model Model.ViewModel.ModeloEquipamentoViewModel
@{
    ViewData["Title"] = "Edit";
}

<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="card card-secondary">
                    <div class="card-header">
                        <h2 class="card-title">Editar Modelo de Ar Condicionado</h2>
                    </div>
                    <form asp-action="Edit">
                        <div class="card-body">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <input type="hidden" asp-for="ModeloEquipamento.Id" />
                            <div class="col-md-5">
                                <div class="form-group" id="ListElements">
                                    <label asp-for="ModeloEquipamento.MarcaEquipamentoID" class="control-label">Marca</label>
                                    @Html.DropDownListFor(model => model.ModeloEquipamento.MarcaEquipamentoID, ViewBag.MarcaEquipamento as SelectList, new
                                        { @class = "form-control" })
                                    <span asp-validation-for="ModeloEquipamento.MarcaEquipamentoID" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-7">
                                <div class="form-group">
                                    <label asp-for="ModeloEquipamento.Nome" class="control-label"></label>
                                    <textarea asp-for="ModeloEquipamento.Nome" class="form-control" maxlength="100" rows="1" style="width: 70%;resize:none"></textarea>
                                    <span asp-validation-for="ModeloEquipamento.Nome" class="text-danger"></span>
                                </div>
                            </div>

                            <div class="ocupation col-md-10">
                                <div id="ccodigo" class="form-group pr-2">
                                    <label title="Codigo" class="control-label">Código da Operação</label>
                                    <textarea id="codigo" class="form-control" type="text" name="codigo" rows="3"></textarea>
                                </div>

                                <div id="coperacao" class="form-group d-inline-block">
                                    <label name="Operacao" class="control-label">Operação</label>
                                    <div class="d-flex">
                                        <select name="operacao" id="operacao" class="form-control">
                                            @foreach (var item in ViewBag.Operacoes)
                                            {
                                                <option value="@item.Id"> @item.Titulo </option>
                                            }
                                        </select>
                                        <span name="operacao" class="ml-2 text-danger"></span>

                                        <div id="cbotao" class="form-group align-element" title="Adicionar código">
                                            <a id="add-novo-horario" onclick="AdicionarNovoCodigo();document.getElementById('codigo').value=''; " class="btn btn-primary text-white">
                                                <i class="nav-icon fa fa-plus"></i>
                                            </a>
                                        </div>
                                    </div>

                                </div>
                            </div>

                            <section id="codigos" class="content">
                                <div class="container-fluid">
                                    <div class="row">
                                        <div class="col-md-5">
                                            <div class="card">
                                                <div class="card-header">
                                                    <h3 class="card-title">Códigos Adicionados</h3>
                                                </div>
                                                <div class="card-body">
                                                    <table id="datatable-responsive" class="table table-striped table-bordered dt-responsive nowrap" cellspacing="0" width="100%">
                                                        <thead>
                                                            <tr>
                                                                <th>Código</th>
                                                                <th>Operação</th>
                                                                <th>Ações</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody id="container-codigo">
                                                            <tr><td colspan="3" class="text-center">Nenhum código adicionado</td></tr>
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </section>
                            <div class="card-footer">
                                <div class="col-md-4">
                                    <input type="submit" value="Salvar" class="btn btn-success" /> |
                                    <a class="btn btn-primary" asp-action="Index">Voltar</a>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>

@if (TempData["mensagemSucesso"] != null)
{
    <div id="mensagem-retorno" onclick="swtAlert('success','Parabéns!','@TempData["mensagemSucesso"]')"></div>
}
else if (TempData["mensagemErro"] != null)
{
    <div id="mensagem-retorno" onclick="swtAlert('warning','Falha!', '@TempData["mensagemErro"]')"></div>
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@9"></script>
    <script src="~/js/sweet-alert.js"></script>

    <!-- Script para manipulação dos códigos -->
    <script>
        // Array para armazenar os códigos adicionados
        let codigosAdicionados = [];

        // Carregar códigos existentes quando a página carrega
        document.addEventListener('DOMContentLoaded', function() {
            // Verificar se há códigos existentes do modelo
        @if (Model.Codigos != null && Model.Codigos.Count > 0)
        {
            <text>
                    // Adicionar códigos existentes do modelo
                @foreach (var item in Model.Codigos)
                {
                    <text>
                            codigosAdicionados.push({
                                codigo: '@Html.Raw(item.Codigo.Replace("\r\n", "\\r\\n").Replace("\n", "\\n").Replace("'", "\\'"))',
                                idOperacao: @item.IdOperacao,
                                operacao: '@item.Operacao',
                                id: @item.Id
                            });
                    </text>
                }
                    // Atualizar a tabela com os códigos carregados
                    atualizarTabelaCodigos();
            </text>
        }
        });

        // Função para adicionar um novo código
        function AdicionarNovoCodigo() {
            const codigoInput = document.getElementById('codigo');
            const operacaoSelect = document.getElementById('operacao');

            const codigo = codigoInput.value.trim();
            const operacaoId = parseInt(operacaoSelect.value);
            const operacaoTexto = operacaoSelect.options[operacaoSelect.selectedIndex].text;

            // Validar se o código não está vazio
            if (codigo === '') {
                swtAlert('warning', 'Atenção!', 'Digite um código válido.');
                return;
            }

            // Adicionar o código à lista
            codigosAdicionados.push({
                codigo: codigo,
                idOperacao: operacaoId,
                operacao: operacaoTexto,
                id: 0 // Novo código, ainda não possui ID
            });

            // Atualizar a tabela de códigos
            atualizarTabelaCodigos();

            // Feedback visual
            //swtAlert('success', 'Sucesso!', 'Código adicionado com sucesso.');
        }

        // Função para remover um código
        function removerCodigo(index) {
            // Remover o item do array
            codigosAdicionados.splice(index, 1);

            // Atualizar a tabela
            atualizarTabelaCodigos();

            // Feedback visual
            //swtAlert('info', 'Informação', 'Código removido com sucesso.');
        }

        // Função para atualizar a tabela de códigos
        function atualizarTabelaCodigos() {
            const containerCodigo = document.getElementById('container-codigo');
            containerCodigo.innerHTML = '';

            // Verificar se há códigos para exibir
            if (codigosAdicionados.length === 0) {
                containerCodigo.innerHTML = '<tr><td colspan="3" class="text-center">Nenhum código adicionado</td></tr>';
                return;
            }

            // Adicionar cada código à tabela
            codigosAdicionados.forEach((item, index) => {
                const tr = document.createElement('tr');
                tr.innerHTML = `
                    <td>
                        ${item.codigo}
                        <input type="hidden" name="Codigos[${index}].Codigo" value="${item.codigo}" />
                        <input type="hidden" name="Codigos[${index}].IdOperacao" value="${item.idOperacao}" />
                        <input type="hidden" name="Codigos[${index}].Operacao" value="${item.operacao}" />
                        <input type="hidden" name="Codigos[${index}].Id" value="${item.id}" />
                        <input type="hidden" name="Codigos[${index}].IdEquipamento" value="${@Model.ModeloEquipamento.Id}" />
                    </td>
                    <td>${item.operacao}</td>
                    <td>
                        <button type="button" class="btn btn-danger btn-sm" onclick="removerCodigo(${index})">
                            <i class="fa fa-trash"></i>
                        </button>
                    </td>
                `;
                containerCodigo.appendChild(tr);
            });
        }
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}